{"version":3,"sources":["api/users.ts","services/user_service.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","services/todo_service.ts","App.tsx","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","title","completed","UserInfo","className","href","TodoInfo","todo","cn","TodoList","todos","map","TodoForm","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","handleReset","action","method","event","preventDefault","Math","max","todosFromServer","onReset","htmlFor","type","value","onChange","target","placeholder","required","initialTodos","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39c4acf6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n  || null;\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoInfo.scss';\n\ntype PropsUser = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<PropsUser> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo\n          user={user}\n        />\n      )}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user_service';\nimport { getNextAvailableId } from '../../services/todo_service';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  // #region state\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  // #endregion\n\n  // #region handlers\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleReset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: getNextAvailableId(),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    handleReset();\n  };\n  // #endregion\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"todo-title\">\n          Title:&nbsp;\n          <input\n            id=\"todo-title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Title\"\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n\n        </label>\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"todo-user\">\n          User:&nbsp;\n          <select\n            id=\"todo-user\"\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\">Choose a user</option>\n\n            {usersFromServer.map((user) => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </label>\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import todosFromServer from '../api/todos';\n\nexport function getNextAvailableId() {\n  const nextId = Math.max(...todosFromServer.map(todo => todo.id));\n\n  return nextId + 1;\n}\n","import './App.scss';\nimport { useState } from 'react';\nimport { getUserById } from './services/user_service';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\nimport { Todo } from './types/Todo';\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (newTodo: Todo) => {\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLInputElement);\n"],"sourceRoot":""}